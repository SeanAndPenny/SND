<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd"
	default-autowire="byName" default-lazy-init="false">

	<context:property-placeholder system-properties-mode="OVERRIDE" location="classpath*:jdbc.properties" />

	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName"
			value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>

	<!-- 国际化文字配置 /i18n/messages.properties welcome=Hello, {0} {1}. Welcome to 
		Spring. jsp中使用标签调用<spring:message code="welcome" arguments="Justin,Lin"/> 
		显示结果：Hello, Justin Lin. Welcome to Spring. -->
	<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basenames" value="i18n/messages"></property>
	</bean>

	<!-- mybatis sqlSessionFactory 注入datasource和配置文件 -->
	<bean class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation"
			value="classpath:Configuration.xml" />
		<property name="mapperLocations"
			value="classpath:com/wondersgroup/**/dao/*Dao.xml" />
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.wondersgroup.**.dao" />
		<property name="markerInterface"
			value="com.wondersgroup.api.BaseDao" />
	</bean>

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- <bean id="filterChainProxy" class="com.wondersgroup.base.login.filter.FilterChainProxy">
		<property name="redirectAddressMap">
			<map>
			如果这里是true，下面两个entry用不到（可以不写正确），true表示sso和rhip等应用部署到了同一台电脑上，反之是分开部署的
				<entry key="relativeAddress" value="true" />
				 
			</map>
		</property>
		<property name="myMatchUrl">
	    	<value>/login.jsp,/comon/zblistUrl.action,/gngl/toZbzsCountUrl.action,YLJGKSHPT,DZBFX,/zb/list.action,tokenId,.ttf,.woff2</value>
	   	</property>
		<property name="serverName" value="http://localhost:8080" />
		<property name="casServerLoginUrl" value="/sso/login" />
		<property name="casServerLogoutUrl" value="/sso/logout"/>	
		<property name="casServerUrlPrefix" value="http://10.1.94.147:8099/sso"/>
	</bean> -->
	
	

	<aop:config proxy-target-class="true">
		<aop:advisor
			pointcut="execution(* com.wondersgroup.*..*.manager.*Manager.*(..))"
			advice-ref="txAdvice" />
	</aop:config>

	<tx:advice id="txAdvice"
		transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="find*" read-only="true" />
			<tx:method name="get*" read-only="true" />
			<tx:method name="query*" read-only="true" />
			<tx:method name="select*" read-only="true" />
			<tx:method name="*" read-only="false"
				rollback-for="java.lang.Exception" />
		</tx:attributes>
	</tx:advice>
</beans>
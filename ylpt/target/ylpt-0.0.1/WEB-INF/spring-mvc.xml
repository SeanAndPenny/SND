<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd    
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd    
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
	<!-- 开启注解 -->
	<mvc:annotation-driven />
	<!-- 配置自定扫描包 -->
	<context:component-scan base-package="com.wondersgroup.**.controller" />

	<!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 默认编码 -->
		<property name="defaultEncoding" value="utf-8" />
		<!-- 文件大小最大值 -->
		<property name="maxUploadSize" value="10485760000" />
		<!-- 内存中的最大值 -->
		<property name="maxInMemorySize" value="40960" />
		<!-- 启用是为了推迟文件解析，以便捕获文件大小异常 -->
		<property name="resolveLazily" value="true" />
	</bean>

	<!-- 根据客户端的不同的请求决定不同的view进行响应, 如 /demo/load.json /demo/query.xml -->
	<bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<!-- 用于开启 /demo/load?format=json 的支持 -->
		<property name="viewResolvers">
			<list>
				<bean class="org.springframework.web.servlet.view.BeanNameViewResolver" />
				<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
					<property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
					<property name="prefix" value="/WEB-INF/views/"/>
					<property name="suffix" value=".jsp"></property>
				</bean>
			</list>
		</property>
		<property name="defaultViews">
			<list>
				<!-- for application/json -->
				<bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView" />
				<!-- for application/xml -->
				<bean class="org.springframework.web.servlet.view.xml.MarshallingView" >
					<property name="marshaller">
						<bean class="org.springframework.oxm.xstream.XStreamMarshaller"/>
					</property>
				</bean>
			</list>
		</property>
	</bean>

	<!-- 处理静态资源 -->
	<!-- <mvc:default-servlet-handler/> -->
	<mvc:resources mapping="/static/commons/js/**" location="/commons/js/" />
	<mvc:resources mapping="/static/commons/fonts/**" location="/commons/fonts/" />
	<mvc:resources mapping="/static/commons/css/**" location="/commons/css/" />
	<mvc:resources mapping="/static/commons/images/**" location="/commons/images/" />
	<mvc:resources mapping="/static/commons/html/**" location="/commons/html/" />
	<mvc:resources mapping="/static/commons/lib/**" location="/commons/lib/" />
	<mvc:resources mapping="/static/layui/**" location="/layui/" />

	<mvc:resources mapping="/favicon.ico" location="/favicon.ico"/> 

	<mvc:interceptors>
        <!-- 检查用户权限，对于部分不需要权限的路径进行排除 -->
        <mvc:interceptor>
            <!-- 先匹配所有路径，然后排除不需要检查的路径 -->
            <mvc:mapping path="/**" />
            <!-- 与登录相关的请求 -->
            <mvc:exclude-mapping path="/login/**" />
            <!-- 以下是静态资源 -->
            <mvc:exclude-mapping path="/static/commons/js/**" />
            <mvc:exclude-mapping path="/static/commons/css/**" />
            <mvc:exclude-mapping path="/static/commons/images/**" />
            <mvc:exclude-mapping path="/static/commons/html/**" />
            <mvc:exclude-mapping path="/static/commons/lib/**" />
            <mvc:exclude-mapping path="/static/layui/**" />
            <!-- 用户是否已经登录的检查 -->
            <bean id="loginInterceptor" class="com.wondersgroup.commons.controller.LoginInterceptor"></bean>
        </mvc:interceptor>
    </mvc:interceptors>

	<!-- Mapping exception to the handler view -->
	<bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
			<prop key="500">/commons/500</prop>
			<prop key="404">/commons/404</prop>
			<prop key="403">/commons/403</prop>
			</props>
		</property>
	</bean>
</beans>